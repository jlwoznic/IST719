#
# Course: IST719
# Name: Joyce Woznica
# Project Code: HW3
# Due Date: 2/3/2020
#
# Package Section
# ------------------------------------------------------------------
#specify the packages of interest
packages=c("reshape2", "ggplot2", "dplyr", "RColorBrewer")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
# I find this does not always work, so added to install when required here
require(dplyr)
install.packages("plyr",dependencies=TRUE)
install.packages("plyr", dependencies = TRUE)
library(plyr)
# Data loading
# ------------------------------------------------------------------
rData <- read.csv("/Users/joycewoznica/IST719/Project/equine-death-and-breakdown.csv",
header = TRUE, na.strings = "NA",
stringsAsFactors = FALSE)
# review missing data
tMissing <-sum(is.na(rData))
cat("The number of missing values in Equine Death and Breakdown Data is ", tMissing)
rData$Weather.Conditions[is.na(rData$Weather.Conditions)] <- "Clear"
# ------------------------------------------------------------------
# force no scientific notation
options(scipen=999)
# General Statistics and Analysis
summary(rData)
str(rData)
# A little more summary information
test<-as.matrix(rData)
summary(test)
# ------------------------------------------------------------------
# Initial Visualizations
# A) Single Dimensional
# Frequency of Incidents by Type
table(rData$Incident.Type)
inc.type <- table(rData$Incident.Type)
library(RColorBrewer)
my.dir <- "/Users/joycewoznica/IST719/Labs/Lab3/"
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
View(sales)
View(sales)
units.by.wine<- aggregate(sales$units.sold,list(wine=sales$wine), FUN = sum)
View(units.by.wine)
View(units.by.wine)
trec<-tapply(sales$income,sales$year,sum) # total income by year
trec
trec
rep.by.wine <- tapply(sales$units.sold, list=(sales$sales.rep, sales$wine), FUN = sum)
rep.by.wine <- tapply(sales$units.sold, list(sales$sales.rep, sales$wine), FUN = sum)
as.data.frame(rep.by.wine)
rep.by.wine <- tapply(sales$units.sold, list(sales$sales.rep, sales$type), FUN = sum)
as.data.frame(rep.by.wine)
rep.by.wine <- tapply(sales$units.sold, list(sales$sales.rep, sales$type), FUN = sum)
rep.by.wine <- as.data.frame(rep.by.wine)
rep.by.wine <- rep.by.wine[order(red, white)]
rep.by.wine <- rep.by.wine[order(type)]
rep.by.wine <- rep.by.wine[order(type),]
View(rep.by.wine)
View(rep.by.wine)
rep.by.wine <- rep.by.wine[order(-red),]
rep.by.wine
rep.by.wine$red
rep.by.wine <- rep.by.wine[order(-rep.by.wine$red),]
rep.by.wine <- rep.by.wine[order(-rep.by.wine$red, -rep.by.wine$white),]
rep.by.wine[order(-rep.by.wine$white),]$sales.rep
rep.by.wine[order(-rep.by.wine$white),]
rownames(rep.by.wine[order(-rep.by.wine$white),])
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
View(sales.2010)
rep.by.wine <- tapply(sales.2010$units.sold, list(sales.2010$sales.rep, sales.2010$type), FUN = sum)
View(rep.by.wine)
View(rep.by.wine)
# change to dataframe as easier for me
rep.by.wine <- as.data.frame(rep.by.wine)
# order by white wine units sold in descending order
# report back only names of reps that happens to be rownames
rownames(rep.by.wine[order(-rep.by.wine$white),])
sorted.rep.by.wine <- rep.by.wine[order(-rep.by.wine$white),]
View(sorted.rep.by.wine)
View(sorted.rep.by.wine)
# order by white wine units sold in descending order
# report back only names of reps that happens to be rownames
rownames(rep.by.wine[order(-rep.by.wine$white),])
View(sales.2010)
View(sales.2010)
rep.by.wine <- tapply(sales.2010$units.sold, list(sales.2010$rep.region, sales.2010$sales.rep, sales.2010$type), FUN = sum)
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
# need sales$sales.rep, sales$type and sales$units.sold and rank them in decreasing order
rep.by.wine <- tapply(sales.2010$units.sold, list(sales.2010$rep.region, sales.2010$sales.rep, sales.2010$type), FUN = sum)
# change to dataframe as easier for me
rep.by.wine <- as.data.frame(rep.by.wine)
View(rep.by.wine)
View(rep.by.wine)
sorted.rep.by.wine <- rep.by.wine[order(-rep.by.wine$white),]
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
table(sales.2010$rep.region, sales.2010$sales.rep, sales.2010$type == "white")
#table(sales.2010$rep.region, sales.2010$sales.rep, sales.2010$type == "white")
select(sales.2010, rep.region, sales, rep, type)
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
#table(sales.2010$rep.region, sales.2010$sales.rep, sales.2010$type == "white")
select(sales.2010, rep.region, sales, rep, type)
# need sales$sales.rep, sales$type and sales$units.sold and rank them in decreasing order
rep.by.wine <- tapply(sales.2010$units.sold, list(sales.2010$rep.region, sales.2010$sales.rep, sales.2010$type), FUN = sum)
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
my.dir <- "/Users/joycewoznica/IST719/Labs/Lab3/"
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
sales.2010 <- sales[whice(sales.2010$type == "white"),]
sales.2010 <- sales[which(sales.2010$type == "white"),]
View(sales.2010)
View(sales.2010)
baseball.example <-
data.frame(team = gl(5, 5,
labels = paste("Team", LETTERS[1:5])),
player = sample(letters, 25),
batting.average = runif(25, .200, .400))
View(baseball.example)
View(baseball.example)
summary(baseball.example)
tapply(baseball.example$batting.average, baseball.example$team,
max)
aggregate(units.sold ~ rep.region, sales.rep, sales.2010, max)
aggregate(units.sold ~ list(rep.region, sales.rep), sales.2010, max)
ddply(sales.2010, .(sales.rep, rep.region), max(sales.2010$units.sold))
tapply(sales.2010$units.sold,list(sales.2010$rep.region,sales.2010$sales.rep),max)
tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),max)
tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum)
aggregate(units.sold ~ list(rep.region, sales.rep), sales.2010, sum)
rep.by.region <- tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum, na.rm = T)
rep.by.region <- as.data.frame(tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum, na.rm = T))
View(rep.by.region)
View(rep.by.region)
# find sum of all sellers by region
rep.by.region <- melt(as.data.frame(tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum)))
melt(rep.by.region)
# make rep a column
rep.by.region$sales.rep <- rownames(rep.by.region)
# find sum of all sellers by region
rep.by.region <- as.data.frame(tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum))
# make rep a column
rep.by.region$sales.rep <- rownames(rep.by.region)
rownames(rep.by.region) <- c()
melt(rep.by.region)
colnames(rep.by.region) <- c("sales.rep", "rep.region", "units.sold")
colnames(rep.by.region) <- c("sales.rep", "rep.region", "units.sold")
View(rep.by.region)
View(rep.by.region)
sales.2010 <- sales[which(sales$year == "2010"),]
# now get only white wine
sales.2010 <- sales[which(sales.2010$type == "white"),]
# find sum of all sellers by region
rep.by.region <- as.data.frame(tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum))
# make rep a column
rep.by.region$sales.rep <- rownames(rep.by.region)
rownames(rep.by.region) <- c()
melt(rep.by.region)
rep.by.region <- melt(rep.by.region)
my.dir <- "/Users/joycewoznica/IST719/Labs/Lab3/"
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
install.packages("dplyr")
library(dplyr)
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
# now get only white wine
sales.2010 <- sales[which(sales.2010$type == "white"),]
# find sum of all sellers by region
rep.by.region <- as.data.frame(tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum))
# make rep a column
rep.by.region$sales.rep <- rownames(rep.by.region)
rownames(rep.by.region) <- c()
rep.by.region <- melt(rep.by.region)
install.packages("dplyr")
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
# now get only white wine
sales.2010 <- sales[which(sales.2010$type == "white"),]
# find sum of all sellers by region
rep.by.region <- as.data.frame(tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum))
# make rep a column
rep.by.region$sales.rep <- rownames(rep.by.region)
rownames(rep.by.region) <- c()
rep.by.region <- melt(rep.by.region)
colnames(rep.by.region) <- c("sales.rep", "rep.region", "units.sold")
# remove NAs
new.df <- rep.by.region[!is.na(rep.by.region$units.sold),]
View(new.df)
# get max in each
tapply(new.df$units.sold, new.df$rep.region, max)
# get max in each
# but need to bring back the sale rep name!
tapply(new.df$units.sold, list(new.df$rep.region,new.df$sales.rep), max)
# get max in each
# but need to bring back the sale rep name!
tapply(new.df$units.sold, new.df$rep.region, max)
# get max in each
# but need to bring back the sale rep name!
df.grouped <- aggregate(new.df$units.sold, list(new.df$rep.region, new.df$sales.rep), max)
View(df.grouped)
# get max in each
# but need to bring back the sale rep name!
df.grouped <- aggregate(new.df$units.sold, list(new.df$rep.region), max)
View(df.grouped)
# get max in each
# but need to bring back the sale rep name!
df.grouped <- aggregate(new.df$units.sold, list(new.df$sales.rep,new.df$rep.region), max)
View(df.grouped)
View(df.grouped)
tapply(new.df$units.sold, new.df$rep.region, max)
View(sales)
View(sales)
units.by.type<- aggregate(sales$units.sold,list(type=sales$type), FUN = sum)
View(units.by.type)
View(units.by.type)
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
#Write a piece of R code to find the names of the sales representatives that sold the most units of red wine in each region in 2012. (sales.csv)
#subset the data
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
# now get only white wine
sales.2010 <- sales[which(sales.2010$type == "white"),]
sales2012<-subset(sales, year==2012 &type=="red")
list.2010 <- tapply(sales.2010$units.sold, list(sales.rep = sales.2010$sales.rep, sales.2010$rep.region), sum)
list.2010 <- as.data.frame(tapply(sales.2010$units.sold, list(sales.rep = sales.2010$sales.rep, sales.2010$rep.region), sum))
View(list.2010)
View(list.2010)
sales.2010 <- sales[which(sales$year == "2010"),]
# now get only white wine
sales.2010 <- sales[which(sales.2010$type == "white"),]
# find sum of all sellers by region
rep.by.region <- as.data.frame(tapply(sales.2010$units.sold,list(sales.2010$sales.rep,sales.2010$rep.region),sum))
# make rep a column
rep.by.region$sales.rep <- rownames(rep.by.region)
rownames(rep.by.region) <- c()
rep.by.region <- melt(rep.by.region)
colnames(rep.by.region) <- c("sales.rep", "rep.region", "units.sold")
# remove NAs
new.df <- rep.by.region[!is.na(rep.by.region$units.sold),]
View(new.df)
View(new.df)
# Central Region
c.df <- c(new.df$sales.rep[which.max(new.df$rep.region),])
new.df[which.max(new.df$rep.region),]
new.df[which.max(new.df$rep.region == "West"),]
new.df[which.max(new.df$rep.region == "East"),]
# Central Region
by.region <- c(new.df[which.max(new.df$rep.region == "West"),],
new.df[which.max(new.df$rep.region == "East"),],
new.df[which.max(new.df$rep.region == "Central"),],
new.df[which.max(new.df$rep.region == "South"),],
new.df[which.max(new.df$rep.region == "North"),])
View(by.region)
View(by.region)
# Central Region
by.region <- as.data.frame(
c(new.df[which.max(new.df$rep.region == "West"),],
new.df[which.max(new.df$rep.region == "East"),],
new.df[which.max(new.df$rep.region == "Central"),],
new.df[which.max(new.df$rep.region == "South"),],
new.df[which.max(new.df$rep.region == "North"),]))
View(by.region)
View(by.region)
# Central Region
by.region <- c(new.df[which.max(new.df$rep.region == "West"),],
new.df[which.max(new.df$rep.region == "East"),],
new.df[which.max(new.df$rep.region == "Central"),],
new.df[which.max(new.df$rep.region == "South"),],
new.df[which.max(new.df$rep.region == "North"),])
View(by.region)
View(by.region)
as.matrix(by.region)
# Central Region
which.max(new.df$rep.region == "Central")
# Central Region
new.df(which.max(new.df$rep.region == "Central"))
# Central Region
which.max(new.df$rep.region == "Central"),]
new.df[which.max(new.df$rep.region == "West"),]
# find sum of all sellers by region
list.2010 <- tapply(sales.2010$units.sold, list(sales.rep=sales.2010$sales.rep,sales.2010$rep.region),FUN=sum)
# find sum of all sellers by region
list.2010 <- as.data.frame(tapply(sales.2010$units.sold, list(sales.rep=sales.2010$sales.rep,sales.2010$rep.region),FUN=sum))
View(list.2010)
View(list.2010)
#Central region
rownames(list.2010[which.max(list.2010$Central),])
#East region
rownames(list.2010[which.max(list.2010$East),])
#North region
rownames(list.2010[which.max(list.2010$North),])
#South region
rownames(list.2010[which.max(list.2010$South),])
#West region
rownames(list.2010[which.max(list.2010$West),])
my.dir <- "/Users/joycewoznica/IST719/Labs/Lab3/"
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
#Write a piece of R code to find the names of the sales representatives that sold the most units of red wine in each region in 2012. (sales.csv)
#subset the data
# first need to subset by 2010 only
sales.2010 <- sales[which(sales$year == "2010"),]
# now get only white wine
sales.2010 <- sales[which(sales.2010$type == "white"),]
# find sum of all sellers by region
list.2010 <- as.data.frame(tapply(sales.2010$units.sold, list(sales.rep=sales.2010$sales.rep,sales.2010$rep.region),FUN=sum))
#Central region
rownames(list.2010[which.max(list.2010$Central),])
#East region
rownames(list.2010[which.max(list.2010$East),])
#North region
rownames(list.2010[which.max(list.2010$North),])
#South region
rownames(list.2010[which.max(list.2010$South),])
#West region
rownames(list.2010[which.max(list.2010$West),])
my.dir <- "/Users/joycewoznica/IST719/Labs/Lab3/"
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
sales.2012 <- sales[which(sales$year == "2012"),]
list.2012 <- as.data.frame(tapply(sales.2012$receipt, list(sales.2012$wine,sales.2012$rep.region),FUN=sum))
my.dir <- "/Users/joycewoznica/IST719/Labs/Lab3/"
sales <- read.csv(file=paste0(my.dir, "sales.csv"), header=TRUE, stringsAsFactors = FALSE)
sales.2012 <- sales[which(sales$year == "2012"),]
View(sales.2012)
View(sales.2012)
list.2012 <- as.data.frame(tapply(sales.2012$income, list(sales.2012$wine,sales.2012$rep.region),FUN=sum))
View(list.2012)
View(list.2012)
#Central region
rownames(list.2012[which.max(list.2012$Central),])
#East region
rownames(list.2012[which.max(list.2012$East),])
#North region
rownames(list.2012[which.max(list.2012$North),])
#South region
rownames(list.2012[which.max(list.2012$South),])
#West region
rownames(list.2012[which.max(list.2012$West),])
my.par <- par()
my.par$mfrow
my.par$usr
